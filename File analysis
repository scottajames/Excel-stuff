<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Comparison Tool</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
            color: #333;
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 10px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            padding: 20px;
            overflow: hidden;
        }
        
        header {
            text-align: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }
        
        h1 {
            color: #2c3e50;
            margin-bottom: 10px;
            font-size: 2.5rem;
        }
        
        .description {
            color: #7f8c8d;
            font-size: 1.1rem;
            max-width: 800px;
            margin: 0 auto;
            line-height: 1.6;
        }
        
        .upload-section {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .upload-box {
            flex: 1;
            min-width: 300px;
            padding: 20px;
            border: 2px dashed #3498db;
            border-radius: 8px;
            text-align: center;
            background: #f8f9fa;
            transition: all 0.3s ease;
        }
        
        .upload-box:hover {
            background: #e8f4fc;
            border-color: #2980b9;
        }
        
        .upload-box h3 {
            margin-bottom: 15px;
            color: #3498db;
        }
        
        .file-input {
            margin: 15px 0;
        }
        
        input[type="file"] {
            width: 100%;
            padding: 10px;
            background: white;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        
        .btn {
            background: #3498db;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: background 0.3s ease;
            margin: 10px 5px;
        }
        
        .btn:hover {
            background: #2980b9;
        }
        
        .btn-compare {
            background: #2ecc71;
        }
        
        .btn-compare:hover {
            background: #27ae60;
        }
        
        .btn-clear {
            background: #e74c3c;
        }
        
        .btn-clear:hover {
            background: #c0392b;
        }
        
        .results-section {
            margin-top: 30px;
        }
        
        .results-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        
        .results-content {
            display: none;
        }
        
        .comparison-result {
            margin-bottom: 30px;
            padding: 20px;
            border-radius: 8px;
            background: #f8f9fa;
        }
        
        .match {
            border-left: 5px solid #2ecc71;
        }
        
        .diff {
            border-left: 5px solid #e74c3c;
        }
        
        .file-content {
            white-space: pre-wrap;
            background: white;
            padding: 15px;
            border-radius: 5px;
            border: 1px solid #ddd;
            max-height: 300px;
            overflow-y: auto;
            margin-top: 15px;
        }
        
        .error-section {
            background: #ffeaa7;
            padding: 15px;
            border-radius: 5px;
            margin-top: 20px;
            border-left: 5px solid #fdcb6e;
        }
        
        .history-section {
            margin-top: 40px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 8px;
        }
        
        .history-item {
            padding: 15px;
            margin: 10px 0;
            background: white;
            border-radius: 5px;
            border-left: 5px solid #3498db;
        }
        
        footer {
            text-align: center;
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            color: #7f8c8d;
        }
        
        @media (max-width: 768px) {
            .upload-section {
                flex-direction: column;
            }
            
            .upload-box {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>File Comparison Tool</h1>
            <p class="description">
                Compare files between your PC and the server. This tool helps identify differences and displays error messages from server files.
                All processing happens in your browser - no data is sent to any server.
            </p>
        </header>
        
        <section class="upload-section">
            <div class="upload-box">
                <h3>Your PC File</h3>
                <p>Select the file from your local computer</p>
                <div class="file-input">
                    <input type="file" id="pc-file" accept=".txt,.log,.csv,.json">
                </div>
                <div id="pc-file-info"></div>
            </div>
            
            <div class="upload-box">
                <h3>Server File</h3>
                <p>Select the file from the server</p>
                <div class="file-input">
                    <input type="file" id="server-file" accept=".txt,.log,.csv,.json">
                </div>
                <div id="server-file-info"></div>
            </div>
        </section>
        
        <div style="text-align: center;">
            <button id="compare-btn" class="btn btn-compare">Compare Files</button>
            <button id="clear-btn" class="btn btn-clear">Clear All</button>
        </div>
        
        <section class="results-section">
            <div class="results-header">
                <h2>Comparison Results</h2>
            </div>
            <div id="results-content" class="results-content">
                <div id="comparison-result" class="comparison-result"></div>
                
                <div class="file-display">
                    <h3>File Contents</h3>
                    <div class="file-content" id="pc-content"></div>
                    <div class="file-content" id="server-content"></div>
                </div>
                
                <div id="error-section" class="error-section" style="display: none;">
                    <h3>Error Messages from Server File</h3>
                    <div id="error-content"></div>
                </div>
            </div>
        </section>
        
        <section class="history-section">
            <h2>Comparison History</h2>
            <p>Recent comparisons (stored for one week):</p>
            <div id="history-list"></div>
        </section>
        
        <footer>
            <p>This tool works entirely in your browser. No data is uploaded to any server.</p>
            <p>All comparison history is stored locally and will be cleared after one week.</p>
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const pcFileInput = document.getElementById('pc-file');
            const serverFileInput = document.getElementById('server-file');
            const compareBtn = document.getElementById('compare-btn');
            const clearBtn = document.getElementById('clear-btn');
            const resultsContent = document.getElementById('results-content');
            const comparisonResult = document.getElementById('comparison-result');
            const pcContent = document.getElementById('pc-content');
            const serverContent = document.getElementById('server-content');
            const errorSection = document.getElementById('error-section');
            const errorContent = document.getElementById('error-content');
            const historyList = document.getElementById('history-list');
            const pcFileInfo = document.getElementById('pc-file-info');
            const serverFileInfo = document.getElementById('server-file-info');
            
            let pcFile = null;
            let serverFile = null;
            
            // Load history from localStorage
            loadHistory();
            
            // Event listeners for file inputs
            pcFileInput.addEventListener('change', function(e) {
                if (this.files.length > 0) {
                    pcFile = this.files[0];
                    pcFileInfo.textContent = `Selected: ${pcFile.name} (${formatFileSize(pcFile.size)})`;
                }
            });
            
            serverFileInput.addEventListener('change', function(e) {
                if (this.files.length > 0) {
                    serverFile = this.files[0];
                    serverFileInfo.textContent = `Selected: ${serverFile.name} (${formatFileSize(serverFile.size)})`;
                }
            });
            
            // Compare button click handler
            compareBtn.addEventListener('click', function() {
                if (!pcFile || !serverFile) {
                    alert('Please select both files to compare.');
                    return;
                }
                
                const pcReader = new FileReader();
                const serverReader = new FileReader();
                
                pcReader.onload = function(e) {
                    const pcText = e.target.result;
                    
                    serverReader.onload = function(e) {
                        const serverText = e.target.result;
                        
                        // Compare files
                        compareFiles(pcText, serverText, pcFile.name, serverFile.name);
                    };
                    
                    serverReader.readAsText(serverFile);
                };
                
                pcReader.readAsText(pcFile);
            });
            
            // Clear button click handler
            clearBtn.addEventListener('click', function() {
                pcFileInput.value = '';
                serverFileInput.value = '';
                pcFile = null;
                serverFile = null;
                pcFileInfo.textContent = '';
                serverFileInfo.textContent = '';
                resultsContent.style.display = 'none';
                pcContent.textContent = '';
                serverContent.textContent = '';
                errorSection.style.display = 'none';
            });
            
            // Function to compare files
            function compareFiles(pcText, serverText, pcFileName, serverFileName) {
                const isMatch = pcText === serverText;
                
                // Display results
                resultsContent.style.display = 'block';
                
                if (isMatch) {
                    comparisonResult.className = 'comparison-result match';
                    comparisonResult.innerHTML = `
                        <h3>Files Match!</h3>
                        <p>The files are identical.</p>
                    `;
                } else {
                    comparisonResult.className = 'comparison-result diff';
                    comparisonResult.innerHTML = `
                        <h3>Files Don't Match</h3>
                        <p>The files have differences.</p>
                    `;
                }
                
                // Display file contents with differences highlighted
                pcContent.textContent = pcText;
                serverContent.textContent = serverText;
                
                // Check for error messages in server file (simple simulation)
                const errorMessages = extractErrorMessages(serverText);
                if (errorMessages.length > 0) {
                    errorSection.style.display = 'block';
                    errorContent.innerHTML = errorMessages.map(msg => 
                        `<div class="error-message">${msg}</div>`
                    ).join('');
                } else {
                    errorSection.style.display = 'none';
                }
                
                // Save to history
                saveToHistory({
                    date: new Date().toISOString(),
                    pcFile: pcFileName,
                    serverFile: serverFileName,
                    match: isMatch,
                    errorCount: errorMessages.length
                });
                
                // Reload history
                loadHistory();
            }
            
            // Function to extract error messages (simulated)
            function extractErrorMessages(text) {
                const errors = [];
                const lines = text.split('\n');
                
                for (const line of lines) {
                    if (line.toLowerCase().includes('error') || 
                        line.toLowerCase().includes('fail') ||
                        line.toLowerCase().includes('exception')) {
                        errors.push(line);
                    }
                    
                    // Limit to 10 most relevant error lines
                    if (errors.length >= 10) break;
                }
                
                return errors;
            }
            
            // Function to save comparison to history
            function saveToHistory(comparison) {
                let history = JSON.parse(localStorage.getItem('fileComparisonHistory') || '[]');
                
                // Add new comparison
                history.push(comparison);
                
                // Keep only last week's data
                const oneWeekAgo = new Date();
                oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);
                
                history = history.filter(item => new Date(item.date) > oneWeekAgo);
                
                // Save back to localStorage
                localStorage.setItem('fileComparisonHistory', JSON.stringify(history));
            }
            
            // Function to load history from localStorage
            function loadHistory() {
                const history = JSON.parse(localStorage.getItem('fileComparisonHistory') || '[]');
                
                if (history.length === 0) {
                    historyList.innerHTML = '<p>No comparison history yet.</p>';
                    return;
                }
                
                historyList.innerHTML = history.map(item => `
                    <div class="history-item">
                        <strong>${new Date(item.date).toLocaleString()}</strong><br>
                        PC: ${item.pcFile} | Server: ${item.serverFile}<br>
                        Status: ${item.match ? 'Match' : 'Different'} | 
                        Errors: ${item.errorCount}
                    </div>
                `).join('');
            }
            
            // Helper function to format file size
            function formatFileSize(bytes) {
                if (bytes < 1024) return bytes + ' bytes';
                else if (bytes < 1048576) return (bytes / 1024).toFixed(1) + ' KB';
                else return (bytes / 1048576).toFixed(1) + ' MB';
            }
        });
    </script>
</body>
</html>
