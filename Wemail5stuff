Sub BCU_AS()
    Dim wsEmployee As Worksheet, wsUnit As Worksheet
    Dim newWorkbook As Workbook
    Dim wsAS As Worksheet, wsBCU As Worksheet
    Dim filterRangeEmployee As Range, filterRangeUnit As Range
    Dim unitCol As Range, unitCell As Range
    Dim dictUnits As Object
    Dim arrUnits() As Variant
    Dim i As Long
    
    ' Set references to the source worksheets
    Set wsEmployee = ThisWorkbook.Worksheets("Employee Listing")
    Set wsUnit = ThisWorkbook.Worksheets("Unit")
    
    ' Create new workbook
    Set newWorkbook = Workbooks.Add
    
    ' Ensure there are 2 sheets in the new workbook
    If newWorkbook.Sheets.Count < 2 Then
        newWorkbook.Sheets.Add After:=newWorkbook.Sheets(1)
    End If
    
    ' Rename the sheets in the new workbook
    Set wsAS = newWorkbook.Sheets(1)
    Set wsBCU = newWorkbook.Sheets(2)
    wsAS.Name = "Employee Listing"
    wsBCU.Name = "Unit"
    
    ' Initialize dictionary for storing unique units
    Set dictUnits = CreateObject("Scripting.Dictionary")
    dictUnits.CompareMode = vbTextCompare ' Case insensitive comparison
    
    ' 1. Process Employee Listing data
    Set filterRangeEmployee = wsEmployee.UsedRange
    
    With filterRangeEmployee
        .AutoFilter Field:=8, Criteria1:="AS - Central South Command Unit" ' Column H
        If .Columns(1).SpecialCells(xlCellTypeVisible).Count > 1 Then
            ' Copy all visible rows to the new Employee Listing sheet
            .Copy wsAS.Range("A1")
            
            ' Get the Unit column (Column P) from the filtered data
            Set unitCol = .Offset(0, 15).Resize(.Rows.Count, 1) ' Column P is 16th column (A=1, P=16)
            
            ' Add unique units from Employee Listing to dictionary
            For Each unitCell In unitCol.SpecialCells(xlCellTypeVisible)
                If unitCell.Row > 1 And Trim(unitCell.Value) <> "" Then ' Skip header and empty cells
                    dictUnits(Trim(unitCell.Value)) = 1 ' Value doesn't matter, we just need the key
                End If
            Next unitCell
        Else
            wsAS.Range("A1").Value = "No matching data in Employee Listing."
        End If
    End With
    wsEmployee.AutoFilterMode = False ' Clear filter
    
    ' 2. Process Unit sheet data
    Set filterRangeUnit = wsUnit.UsedRange
    
    With filterRangeUnit
        .AutoFilter Field:=3, Criteria1:="*BCU AS*" ' Column C with wildcards
        If .Columns(1).SpecialCells(xlCellTypeVisible).Count > 1 Then
            ' Add unique units from Unit sheet to dictionary
            For Each unitCell In .Columns(3).SpecialCells(xlCellTypeVisible) ' Column C
                If unitCell.Row > 1 And Trim(unitCell.Value) <> "" Then ' Skip header and empty cells
                    dictUnits(Trim(unitCell.Value)) = 1
                End If
            Next unitCell
        End If
    End With
    wsUnit.AutoFilterMode = False ' Clear filter
    
    ' 3. Output all unique units to the Unit sheet in new workbook
    If dictUnits.Count > 0 Then
        wsBCU.Range("A1").Value = "Unit" ' Header
        arrUnits = dictUnits.Keys
        For i = LBound(arrUnits) To UBound(arrUnits)
            wsBCU.Range("A" & i + 2).Value = arrUnits(i)
        Next i
    Else
        wsBCU.Range("A1").Value = "No units found."
    End If
    
    ' Autofit columns
    wsAS.Columns.AutoFit
    wsBCU.Columns.AutoFit
    
    MsgBox "AS - Central South Command Unit data processed successfully." & vbCrLf & _
           "Found " & dictUnits.Count & " unique units.", vbInformation
End Sub
