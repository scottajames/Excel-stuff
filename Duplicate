Sub TrackUnitUsage()
    Dim wsHR As Worksheet, wsUnit As Worksheet, wsOutput As Worksheet
    Dim dictInUse As Object, dictAllUnits As Object
    Dim lastRowHR As Long, lastRowUnit As Long, i As Long
    Dim cellValue As Variant
    Dim inUseCount As Long, notInUseCount As Long
    Dim outputRow As Long
    
    ' Create dictionaries to track units
    Set dictInUse = CreateObject("Scripting.Dictionary")
    Set dictAllUnits = CreateObject("Scripting.Dictionary")
    
    ' Set worksheets
    Set wsHR = ThisWorkbook.Sheets("HR_Feed")
    Set wsUnit = ThisWorkbook.Sheets("Unit")
    Set wsOutput = ThisWorkbook.Sheets("Sheet1") ' Change to your output sheet name
    
    ' Find last rows
    lastRowHR = wsHR.Cells(wsHR.Rows.Count, "Z").End(xlUp).Row
    lastRowUnit = wsUnit.Cells(wsUnit.Rows.Count, "A").End(xlUp).Row
    
    ' Collect all units from Unit sheet
    For i = 2 To lastRowUnit ' Assuming row 1 is header
        cellValue = wsUnit.Cells(i, 1).Value
        If Not IsEmpty(cellValue) And cellValue <> "" Then
            dictAllUnits(CStr(cellValue)) = True
        End If
    Next i
    
    ' Check HR_Feed columns Z and AB for units in use
    For i = 2 To lastRowHR ' Assuming row 1 is header
        ' Check column Z
        cellValue = wsHR.Cells(i, 26).Value ' Column Z is 26
        If Not IsEmpty(cellValue) And cellValue <> "" Then
            dictInUse(CStr(cellValue)) = True
        End If
        
        ' Check column AB
        cellValue = wsHR.Cells(i, 28).Value ' Column AB is 28
        If Not IsEmpty(cellValue) And cellValue <> "" Then
            dictInUse(CStr(cellValue)) = True
        End If
    Next i
    
    ' Calculate counts
    inUseCount = dictInUse.Count
    notInUseCount = dictAllUnits.Count - inUseCount
    
    ' Display counts in D1 and E1
    wsOutput.Range("D1").Value = inUseCount
    wsOutput.Range("E1").Value = notInUseCount
    
    ' Add headers
    wsOutput.Range("D2").Value = "Units In Use"
    wsOutput.Range("E2").Value = "Units Not In Use"
    
    ' Clear previous data below headers
    wsOutput.Range("D3:D" & wsOutput.Rows.Count).ClearContents
    wsOutput.Range("E3:E" & wsOutput.Rows.Count).ClearContents
    
    ' List units in use (starting from D3)
    outputRow = 3
    For Each cellValue In dictInUse.Keys
        wsOutput.Cells(outputRow, 4).Value = cellValue ' Column D
        outputRow = outputRow + 1
    Next cellValue
    
    ' List units not in use (starting from E3)
    outputRow = 3
    For Each cellValue In dictAllUnits.Keys
        If Not dictInUse.Exists(cellValue) Then
            wsOutput.Cells(outputRow, 5).Value = cellValue ' Column E
            outputRow = outputRow + 1
        End If
    Next cellValue
    
    ' Sort both lists alphabetically
    With wsOutput
        .Range("D3:D" & .Cells(.Rows.Count, "D").End(xlUp).Row).Sort Key1:=.Range("D3"), Order1:=xlAscending
        .Range("E3:E" & .Cells(.Rows.Count, "E").End(xlUp).Row).Sort Key1:=.Range("E3"), Order1:=xlAscending
    End With
    
    ' Formatting
    With wsOutput
        .Range("D1:E1").Font.Bold = True
        .Range("D2:E2").Font.Bold = True
        .Range("D1:E1").Interior.Color = RGB(200, 200, 200)
        .Range("D2:E2").Interior.Color = RGB(200, 200, 200)
    End With
    
    MsgBox "Unit tracking completed!" & vbCrLf & _
           "Units in use: " & inUseCount & vbCrLf & _
           "Units not in use: " & notInUseCount, vbInformation
    
    ' Clean up
    Set dictInUse = Nothing
    Set dictAllUnits = Nothing
    Set wsHR = Nothing
    Set wsUnit = Nothing
    Set wsOutput = Nothing
End Sub

Sub CheckEmployeeData()
    Dim wsHE As Worksheet, wsHR As Worksheet, wsOutput As Worksheet
    Dim lastRowHE As Long, lastRowHR As Long, i As Long, j As Long
    Dim givenName As String, supervisorName As String, workTray As String
    Dim foundInHR As Boolean, foundSupervisor As Boolean, foundWorkTray As Boolean
    Dim hasData As Boolean
    Dim resultRow As Long
    
    ' Set worksheets
    Set wsHE = ThisWorkbook.Sheets("HE_Feed")
    Set wsHR = ThisWorkbook.Sheets("HR_Feed")
    Set wsOutput = ThisWorkbook.Sheets("Sheet1") ' Change to your output sheet name
    
    ' Find last rows
    lastRowHE = wsHE.Cells(wsHE.Rows.Count, "A").End(xlUp).Row
    lastRowHR = wsHR.Cells(wsHR.Rows.Count, "A").End(xlUp).Row
    
    ' Clear previous results
    wsOutput.Range("F3:F" & wsOutput.Rows.Count).ClearContents
    wsOutput.Range("F2").Value = "Employee Check Results"
    wsOutput.Range("F2").Font.Bold = True
    
    ' Check each employee in HE_Feed
    For i = 2 To lastRowHE ' Assuming row 1 is header
        ' Get employee data
        givenName = CStr(wsHE.Cells(i, 6).Value) & CStr(wsHE.Cells(i, 7).Value) ' Columns F & G
        supervisorName = CStr(wsHE.Cells(i, 21).Value) ' Column U
        workTray = CStr(wsHE.Cells(i, 26).Value) ' Column Z
        
        ' Reset flags
        foundInHR = False
        foundSupervisor = False
        foundWorkTray = False
        hasData = False
        
        ' Check if given name exists in HR_Feed
        For j = 2 To lastRowHR
            If InStr(1, CStr(wsHR.Cells(j, 1).Value), givenName, vbTextCompare) > 0 Then
                foundInHR = True
                Exit For
            End If
        Next j
        
        ' Check if supervisor exists in HR_Feed
        For j = 2 To lastRowHR
            If InStr(1, CStr(wsHR.Cells(j, 1).Value), supervisorName, vbTextCompare) > 0 Then
                foundSupervisor = True
                Exit For
            End If
        Next j
        
        ' Check if work tray exists in HR_Feed
        For j = 2 To lastRowHR
            If CStr(wsHR.Cells(j, 1).Value) = workTray Then
                foundWorkTray = True
                Exit For
            End If
        Next j
        
        ' Check columns Q, P, O, N, M, L, K, J, I, H for data
        For j = 18 To 27 Step -1 ' Columns H to Q (18 to 27)
            If Not IsEmpty(wsHE.Cells(i, j).Value) And wsHE.Cells(i, j).Value <> "" Then
                hasData = True
                Exit For
            End If
        Next j
        
        ' Display result
        resultRow = i + 1 ' Offset for header
        If foundInHR And foundSupervisor And foundWorkTray And hasData Then
            wsOutput.Cells(resultRow, 6).Value = "VALID - " & givenName
            wsOutput.Cells(resultRow, 6).Interior.Color = RGB(146, 208, 80) ' Green
        Else
            wsOutput.Cells(resultRow, 6).Value = "INVALID - " & givenName
            wsOutput.Cells(resultRow, 6).Interior.Color = RGB(255, 199, 206) ' Red
            
            ' Add reasons
            If Not foundInHR Then wsOutput.Cells(resultRow, 7).Value = "Name not in HR"
            If Not foundSupervisor Then wsOutput.Cells(resultRow, 8).Value = "Supervisor not in HR"
            If Not foundWorkTray Then wsOutput.Cells(resultRow, 9).Value = "Work tray not in HR"
            If Not hasData Then wsOutput.Cells(resultRow, 10).Value = "No data in columns H-Q"
        End If
    Next i
    
    MsgBox "Employee data check completed!", vbInformation
    
    ' Clean up
    Set wsHE = Nothing
    Set wsHR = Nothing
    Set wsOutput = Nothing
End Sub

Sub RunAllChecks()
    ' Run both checks
    TrackUnitUsage
    CheckEmployeeData
    MsgBox "All checks completed successfully!", vbInformation
End Sub
