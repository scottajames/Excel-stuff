Sub ImportColumnsWithConditions()
    Dim ws1 As Worksheet, ws2 As Worksheet, wsMapping As Worksheet
    Dim lastRow As Long, i As Long
    Dim needsDefault As Boolean
    
    ' Set worksheets
    Set ws1 = ThisWorkbook.Sheets("Sheet1")
    Set ws2 = ThisWorkbook.Sheets("Sheet2")
    
    Application.ScreenUpdating = False
    
    ' Find last row with data in Sheet2 (starting from row 2)
    lastRow = ws2.Cells(ws2.Rows.Count, "A").End(xlUp).Row
    If lastRow < 2 Then lastRow = 2 ' Ensure we at least process row 2
    
    ' Clear previous data in target columns (D, E, J) starting from row 2
    ws1.Range("D2:D" & lastRow).ClearContents
    ws1.Range("E2:E" & lastRow).ClearContents
    ws1.Range("J2:J" & lastRow).ClearContents
    
    ' Import data starting from row 2
    For i = 2 To lastRow
        needsDefault = False
        
        ' Column D in Sheet1: R→S→T→U→V from Sheet2
        If ws2.Cells(i, 18).Value <> "" Then
            ws1.Cells(i, 4).Value = ws2.Cells(i, 18).Value
            needsDefault = True
        ElseIf ws2.Cells(i, 19).Value <> "" Then
            ws1.Cells(i, 4).Value = ws2.Cells(i, 19).Value
            needsDefault = True
        ElseIf ws2.Cells(i, 20).Value <> "" Then
            ws1.Cells(i, 4).Value = ws2.Cells(i, 20).Value
            needsDefault = True
        ElseIf ws2.Cells(i, 21).Value <> "" Then
            ws1.Cells(i, 4).Value = ws2.Cells(i, 21).Value
            needsDefault = True
        ElseIf ws2.Cells(i, 22).Value <> "" Then
            ws1.Cells(i, 4).Value = ws2.Cells(i, 22).Value
            needsDefault = True
        End If
        
        ' Column E in Sheet1 gets I from Sheet2
        ws1.Cells(i, 5).Value = ws2.Cells(i, 9).Value
        If ws1.Cells(i, 5).Value <> "" Then needsDefault = True
        
        ' Column J in Sheet1: H→G→F→E→D from Sheet2
        If ws2.Cells(i, 8).Value <> "" Then
            ws1.Cells(i, 10).Value = ws2.Cells(i, 8).Value
            needsDefault = True
        ElseIf ws2.Cells(i, 7).Value <> "" Then
            ws1.Cells(i, 10).Value = ws2.Cells(i, 7).Value
            needsDefault = True
        ElseIf ws2.Cells(i, 6).Value <> "" Then
            ws1.Cells(i, 10).Value = ws2.Cells(i, 6).Value
            needsDefault = True
        ElseIf ws2.Cells(i, 5).Value <> "" Then
            ws1.Cells(i, 10).Value = ws2.Cells(i, 5).Value
            needsDefault = True
        Else
            ws1.Cells(i, 10).Value = ws2.Cells(i, 4).Value
            If ws1.Cells(i, 10).Value <> "" Then needsDefault = True
        End If
        
        ' Set default values if any of D, E, or J have text
        If needsDefault Then
            ws1.Cells(i, 1).Value = "XXC_MPS_CONNECT_DEFAULTUNIT"
            ws1.Cells(i, 8).Value = "Y"
            ws1.Cells(i, 9).Value = "XXC_MPS_CONNECT_DEFAULTUNIT"
        Else
            ' Optional: Clear these columns if none of D/E/J have text
            ws1.Cells(i, 1).ClearContents
            ws1.Cells(i, 8).ClearContents
            ws1.Cells(i, 9).ClearContents
        End If
    Next i
    
    ' Now run the additional check for DEFAULTUNIT_CHECK and HR_Feed
    Call CheckDefaultUnitsAndAddRoles
    
    Application.ScreenUpdating = True
    MsgBox "Data imported successfully! Processed " & (lastRow - 1) & " rows.", vbInformation
End Sub

Sub CheckDefaultUnitsAndAddRoles()
    Dim wsMapping As Worksheet
    Dim defaultUnitQuery As ListObject, hrFeedQuery As ListObject
    Dim i As Long, lastRow As Long, hrRow As Long, col As Integer
    Dim orgLevel As String, unitToCheck As String
    Dim found As Boolean
    Dim defaultUnitArray As Variant, hrFeedArray As Variant
    Dim rolesFound As String, rankFound As String
    
    ' Set worksheet - changed to Sheet1 since that's where your data is going
    Set wsMapping = ThisWorkbook.Sheets("Sheet1")
    
    ' Get the data queries
    On Error Resume Next
    Set defaultUnitQuery = ThisWorkbook.Connections("DEFAULTUNIT_CHECK").Worksheet.ListObjects(1)
    Set hrFeedQuery = ThisWorkbook.Connections("HR_Feed").Worksheet.ListObjects(1)
    On Error GoTo 0
    
    If defaultUnitQuery Is Nothing Then
        Debug.Print "DEFAULTUNIT_CHECK query not found!"
        Exit Sub
    End If
    
    If hrFeedQuery Is Nothing Then
        Debug.Print "HR_Feed query not found!"
        Exit Sub
    End If
    
    ' Load data into arrays for faster processing
    defaultUnitArray = defaultUnitQuery.DataBodyRange.Value
    hrFeedArray = hrFeedQuery.DataBodyRange.Value
    
    ' Get last row in Sheet1 (column J)
    lastRow = wsMapping.Cells(wsMapping.Rows.Count, "J").End(xlUp).Row
    
    ' Turn off screen updating
    Application.ScreenUpdating = False
    
    ' Process each row in Sheet1
    For i = 2 To lastRow
        rolesFound = ""
        rankFound = ""
        unitToCheck = wsMapping.Cells(i, "J").Value
        
        ' Search DEFAULTUNIT_CHECK for the unit (assuming column A has the units)
        For duRow = LBound(defaultUnitArray, 1) To UBound(defaultUnitArray, 1)
            If defaultUnitArray(duRow, 1) = unitToCheck Then
                orgLevel = defaultUnitArray(duRow, 11) ' Column K (11th column)
                found = True
                Exit For
            End If
        Next duRow
        
        If found Then
            ' Search HR_Feed for the orgLevel (columns H-Q)
            For hrRow = LBound(hrFeedArray, 1) To UBound(hrFeedArray, 1)
                For col = 1 To 10 ' Columns H-Q (1-10 in array)
                    If hrFeedArray(hrRow, col) = orgLevel Then
                        ' Get Security Roles (AG = column 33)
                        If Not IsEmpty(hrFeedArray(hrRow, 33)) Then
                            rolesFound = IIf(rolesFound = "", hrFeedArray(hrRow, 33), rolesFound & ", " & hrFeedArray(hrRow, 33))
                        End If
                        ' Get Rank (C = column 3)
                        If rankFound = "" And Not IsEmpty(hrFeedArray(hrRow, 3)) Then
                            rankFound = hrFeedArray(hrRow, 3)
                        End If
                        Exit For
                    End If
                Next col
            Next hrRow
            
            ' Update Sheet1 (columns K and L)
            wsMapping.Cells(i, "K").Value = rolesFound
            wsMapping.Cells(i, "L").Value = rankFound
        Else
            wsMapping.Cells(i, "K").Value = ""
            wsMapping.Cells(i, "L").Value = ""
        End If
        found = False ' Reset for next row
    Next i
    
    Application.ScreenUpdating = True
End Sub
