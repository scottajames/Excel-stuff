Sub CombinedImportAndValidation()
    On Error GoTo ErrorHandler
    
    Dim wsOutput As Worksheet, wsSummary As Worksheet, wsMapping As Worksheet
    Dim lastRow As Long, i As Long, duRow As Long, hrRow As Long, col As Integer
    Dim needsDefault As Boolean, found As Boolean
    Dim orgLevel As String, unitToCheck As String
    Dim rolesFound As String, rankFound As String
    Dim defaultUnitQuery As ListObject, hrFeedQuery As ListObject
    Dim defaultUnitArray As Variant, hrFeedArray As Variant
    Dim queryAvailable As Boolean
    
    ' Set worksheets
    Set wsOutput = GetWorksheet("OUTPUT")
    Set wsSummary = GetWorksheet("SUMMARY")
    Set wsMapping = GetWorksheet("MAPPING")
    If wsOutput Is Nothing Or wsSummary Is Nothing Or wsMapping Is Nothing Then Exit Sub
    
    ' Get queries from "Mapping [2]" group
    Set defaultUnitQuery = GetQueryFromPQGroup("DEFAULTUNIT_CHECK", "Mapping [2]")
    Set hrFeedQuery = GetQueryFromPQGroup("HR_Feed", "Mapping [2]")
    
    ' Check query availability
    queryAvailable = Not (defaultUnitQuery Is Nothing Or hrFeedQuery Is Nothing)
    If Not queryAvailable Then
        If MsgBox("Queries not found in 'Mapping [2]' group. Continue with import only?", vbQuestion + vbYesNo) = vbNo Then
            Exit Sub
        End If
    Else
        ' Load query data into arrays
        On Error Resume Next
        defaultUnitArray = defaultUnitQuery.DataBodyRange.Value
        hrFeedArray = hrFeedQuery.DataBodyRange.Value
        If Err.Number <> 0 Then
            queryAvailable = False
            MsgBox "Error loading query data. Continuing with import only.", vbExclamation
        End If
        On Error GoTo 0
    End If
    
    ' Rest of your code remains exactly the same...
    ' [Previous implementation continues here]
    
ErrorHandler:
    Application.ScreenUpdating = True
    MsgBox "Error in row " & i & ": " & Err.Description, vbCritical
End Sub

Function GetQueryFromPQGroup(queryName As String, groupName As String) As ListObject
    Dim conn As WorkbookConnection
    Dim lo As ListObject
    Dim ws As Worksheet
    
    ' Method 1: Try finding connection with exact group name
    On Error Resume Next
    For Each conn In ThisWorkbook.Connections
        ' Check both possible naming formats
        If conn.Name = groupName & "\" & queryName Or _
           conn.Name = groupName & "!" & queryName Then
            Set ws = ThisWorkbook.Sheets(conn.WorksheetConnection.Parent.Name)
            Set GetQueryFromPQGroup = ws.ListObjects(queryName)
            Exit For
        End If
    Next conn
    
    ' Method 2: Try finding by query name only (fallback)
    If GetQueryFromPQGroup Is Nothing Then
        For Each ws In ThisWorkbook.Worksheets
            For Each lo In ws.ListObjects
                If lo.Name = queryName Then
                    Set GetQueryFromPQGroup = lo
                    Exit For
                End If
            Next lo
            If Not GetQueryFromPQGroup Is Nothing Then Exit For
        Next ws
    End If
    
    ' Method 3: Try alternative group name formats
    If GetQueryFromPQGroup Is Nothing Then
        For Each conn In ThisWorkbook.Connections
            ' Try without brackets
            If conn.Name = "Mapping\" & queryName Or _
               conn.Name = "Mapping!" & queryName Then
                Set ws = ThisWorkbook.Sheets(conn.WorksheetConnection.Parent.Name)
                Set GetQueryFromPQGroup = ws.ListObjects(queryName)
                Exit For
            End If
        Next conn
    End If
    
    On Error GoTo 0
    
    If GetQueryFromPQGroup Is Nothing Then
        MsgBox "Query '" & queryName & "' not found in group '" & groupName & "'", vbExclamation
    End If
End Function
